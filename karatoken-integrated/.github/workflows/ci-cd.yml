name: Continuous Deployment Pipeline

# Continuous mode with 1 hour timeout
on:
  # Trigger on all commits to main/master
  push:
    branches: [ main, master ]
  # Trigger on pull request merges
  pull_request:
    types: [closed]
    branches: [ main, master ]
  # Scheduled runs (daily)
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight
  # Manual trigger
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: true
        default: 'Manual trigger'

# Job configurations with timeout and retry settings
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Job-level error handling - fail fast
    continue-on-error: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      continue-on-error: false
    
    - name: Build
      run: npm run build
      continue-on-error: false

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    continue-on-error: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Install dependencies
      run: npm ci
      continue-on-error: false
    
    - name: Run tests
      run: npm test
      continue-on-error: false

  deploy:
    name: Deploy to Production
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: 
      name: production
      # Auto-approve deployments
      url: ${{ steps.deploy.outputs.url }}
    timeout-minutes: 60
    continue-on-error: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      id: deploy
      run: |
        # Add your deployment commands here
        echo "Deploying to production..."
        # Example: echo "url=https://example.com" >> $GITHUB_OUTPUT
      continue-on-error: false

  publish:
    name: Publish Package
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    continue-on-error: false
    
    steps:
    - name: Publish package
      run: |
        # Add your package publishing commands here
        echo "Publishing package..."
        # Example: npm publish --access public
      continue-on-error: false

# Notifications are configured in repository settings
